<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.shaolingweb.mybatis.daoBase.DemoUser">

<!-- =================== 自定义代码区start =================== -->
	
<!-- =================== 自定义代码区 end ===================  -->

<!-- mybatis ehcache 一级缓存(SqlSession)配置
	参考：http://mybatis.github.io/mybatis-3/sqlmap-xml.html#cache
	看命中日志：org.apache.ibatis.cache.decorators.LoggingCache设为debug
	默认使用内置HashMap缓存
	     <cache /> 
		<cache type="org.mybatis.caches.ehcache.EhcacheCache"/> 
--> 
	<resultMap id="RM_DemoUser" type="cn.shaolingweb.mybatis.daoBase.DemoUser">
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="age" column="age"/>
		<result property="createDate" column="createDate"/>
		<result property="updateDate" column="updateDate"/>
	</resultMap>
	<sql id="columns">
	    <![CDATA[id,name,age,createDate,updateDate ]]>
	</sql>
	<!-- 
	useGeneratedKeys配置:
		sqlserver and mysql  
			useGeneratedKeys="true" keyProperty="xxx"
		oracle: 
			order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
				SELECT sequenceName.nextval AS ID FROM DUAL 
			</selectKey>
		保证已设置自增，自增列在插入语句可有可无 
	-->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
	    INSERT INTO demo_user(<include refid="columns" />)  
	    <![CDATA[VALUES(#{id}, #{name}, #{age}, #{createDate}, #{updateDate} )]]>
	</insert>
	<!-- 批量插入 -->
	<insert id="insertBatch" >
		INSERT INTO demo_user(<include refid="columns" />) 
		VALUES
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.id},#{item.name},#{item.age},#{item.createDate},#{item.updateDate})
		</foreach>
	</insert>
	<!-- 更新条件 -->
     <sql id="update_sql">
         <set>
		 	<!-- set元素：前置set关键字且消除无关逗号,等价<trim prefix="SET" suffixOverrides=","> -->
                <if test="name != null and name != ''">name = #{name} ,</if>
                <if test="age != null">age =#{age},</if>
                <if test="createDate != null">createDate =#{createDate}, </if>
                <if test="updateDate != null">updateDate =#{updateDate} </if>
       </set>
    </sql>
    <!-- 完全自定义更新SQL -->
    <update id="updateCustomSql" >${customSql}</update>
	<!-- 更新语句 -->
	<update id="update" >
		UPDATE  demo_user  <include refid="update_sql" />
		<where>
			<if test="extraConditions != null  and extraConditions !=''"> ${extraConditions}</if>
		<choose>  
		<when test="ids != null  and ids !=''">id in (${ids})</when>  
		<otherwise>
			id =#{id}
		</otherwise>  
		</choose> 
		</where>
	</update>

	<!-- 删除:自定义 -->
	<delete id="deleteCustomSql" >${customSql}</delete>
	<delete id="delete">
		DELETE FROM demo_user 
		<where> 
			id=#{id}
	    </where>
	</delete>
	<delete id="deleteByCondition">
		DELETE FROM demo_user
		<choose> 
			<!-- todo --> 
			<when test="where != null and where !=''">
${where}			</when>  
		    <otherwise>
				<include refid="findPage_where"/>
			</otherwise>  
		</choose>
	</delete>
	<delete id="delete_batch_string" >
		<![CDATA[ DELETE FROM sales_ko_product WHERE id IN (${ids}) ]]>
	</delete>
    <select id="getById" resultMap="RM_DemoUser">
	    SELECT <include refid="columns" />
	    <![CDATA[FROM demo_user WHERE id = #{id} ]]>
    </select>
    <sql id="findPage_where"><!-- ognl访问静态方法为@class@method(args),以下Ognl.isNotEmpty()方法,其它如isNotBlank()可用，具体查Ognl类 -->
		<where> 
			<if test="ids != null  and ids !=''"> AND id in (${ids})</if>

			<if test="id != null">AND id = #{id}</if>

			<if test="name != null and name !=''">
				<choose>
					<when test="selectType['name']==1">AND name like CONCAT('%', #{name}, '%')</when>  
					<otherwise>AND name = #{name}</otherwise>  
				</choose>
			</if>

			<if test="age != null">AND age = #{age}</if>
			<if test="createDateBegin != null">AND createDate >= #{createDateBegin}</if>
			<if test="createDateEnd != null">AND createDate &lt;= #{createDateEnd}</if>
			<if test="updateDateBegin != null">AND updateDate >= #{updateDateBegin}</if>
			<if test="updateDateEnd != null">AND updateDate &lt;= #{updateDateEnd}</if>
			<if test="extraConditions != null">AND ${extraConditions}</if>
		</where>
    </sql>
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM demo_user 
		<choose>  
			<when test="where != null and where !=''"> ${where}</when>  
		<otherwise>
			<include refid="findPage_where"/>
		</otherwise>  
		</choose>
    </select>
    <select id="findPage" resultMap="RM_DemoUser"><!-- 分页查询已用Dialect分页,也可以直接编写分页,将传 offset,pageSize,lastRows 3个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
    	SELECT
    	<choose>  
	   		<when test="selectColumns != null and selectColumns !=''">
${selectColumns}			</when>  
			<otherwise>
				<include refid="columns" />
			</otherwise>  
		</choose>
    	FROM demo_user
		<choose>  
			<when test="where != null and where !=''"> ${where}</when>  
			<otherwise>
				<include refid="findPage_where"/>
					<if test="groupColumns != null and groupColumns!=''">group by ${groupColumns}</if>
					<if test="sortColumns != null  and sortColumns!=''">order by ${sortColumns}</if>
			</otherwise>  
		</choose>
    </select>

	<!-- 基于有unique索引的字段查询，非主键 -->
		<select id="getByName" resultMap="RM_DemoUser" parameterType="java.lang.String">
		SELECT <include refid="columns"/><![CDATA[FROM demo_user where name = #{name}]]>
		</select>
    <!-- 示例用法 -->
    <delete id="delete_batch_list">
        DELETE FROM demo_user WHERE id IN <foreach item="item" collection="list" open="(" separator="," close=")">#{item}</foreach>
    </delete>
</mapper>
